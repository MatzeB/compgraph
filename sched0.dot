digraph "Scheduling-Units Graph for dag.mixer:" {
	rankdir="BT";
	label="Scheduling-Units Graph for dag.mixer:";

	Node0x7fc0cd021a00 [shape=record,shape=Mrecord,label="{SU:0|%0:gr64 = COPY $rdi\n}"];
	Node0x7fc0cd021b10 [shape=record,shape=Mrecord,label="{SU:1|%1:gr64 = MOV64rm $rip, 1, $noreg, target-flags(x86-gotpcrel) @ga, $noreg :: (load (s64) from got)\n}"];
	Node0x7fc0cd021c20 [shape=record,shape=Mrecord,label="{SU:2|undef %12.sub_32bit:gr64_nosp = MOV32rm %1:gr64, 1, $noreg, 0, $noreg :: (dereferenceable load (s32) from @ga, !tbaa !4)\n}"];
	Node0x7fc0cd021c20 -> Node0x7fc0cd021b10;
	Node0x7fc0cd021d30 [shape=record,shape=Mrecord,label="{SU:3|%3:gr64 = MOV64rm $rip, 1, $noreg, target-flags(x86-gotpcrel) @gb, $noreg :: (load (s64) from got)\n}"];
	Node0x7fc0cd021e40 [shape=record,shape=Mrecord,label="{SU:4|%4:gr32 = MOV32rm %3:gr64, 1, $noreg, 0, $noreg :: (dereferenceable load (s32) from @gb, !tbaa !4)\n}"];
	Node0x7fc0cd021e40 -> Node0x7fc0cd021d30;
	Node0x7fc0cd021f50 [shape=record,shape=Mrecord,label="{SU:5|%5:gr64 = MOV64rm $rip, 1, $noreg, target-flags(x86-gotpcrel) @gc, $noreg :: (load (s64) from got)\n}"];
	Node0x7fc0cd022060 [shape=record,shape=Mrecord,label="{SU:6|%6:gr64 = MOV64rm $rip, 1, $noreg, target-flags(x86-gotpcrel) @gd, $noreg :: (load (s64) from got)\n}"];
	Node0x7fc0cd022170 [shape=record,shape=Mrecord,label="{SU:7|%7:gr32 = MOV32rm %6:gr64, 1, $noreg, 0, $noreg :: (dereferenceable load (s32) from @gd, !tbaa !4)\n}"];
	Node0x7fc0cd022170 -> Node0x7fc0cd022060;
	Node0x7fc0cd022280 [shape=record,shape=Mrecord,label="{SU:8|undef %14.sub_32bit:gr64_with_sub_8bit = MOV32rm %5:gr64, 1, $noreg, 0, $noreg :: (dereferenceable load (s32) from @gc, !tbaa !4)\n}"];
	Node0x7fc0cd022280 -> Node0x7fc0cd021f50;
	Node0x7fc0cd022390 [shape=record,shape=Mrecord,label="{SU:9|%14.sub_32bit:gr64_with_sub_8bit = XOR32rr %14.sub_32bit:gr64_with_sub_8bit(tied-def 0), %7:gr32, implicit-def dead $eflags\n}"];
	Node0x7fc0cd022390 -> Node0x7fc0cd022280;
	Node0x7fc0cd022390 -> Node0x7fc0cd022280[color=blue,style=dashed];
	Node0x7fc0cd022390 -> Node0x7fc0cd022170;
	Node0x7fc0cd0224a0 [shape=record,shape=Mrecord,label="{SU:10|%14.sub_32bit:gr64_with_sub_8bit = AND32rr %14.sub_32bit:gr64_with_sub_8bit(tied-def 0), %4:gr32, implicit-def dead $eflags\n}"];
	Node0x7fc0cd0224a0 -> Node0x7fc0cd022390;
	Node0x7fc0cd0224a0 -> Node0x7fc0cd022390[color=blue,style=dashed];
	Node0x7fc0cd0224a0 -> Node0x7fc0cd021e40;
	Node0x7fc0cd0225b0 [shape=record,shape=Mrecord,label="{SU:11|%14.sub_32bit:gr64_with_sub_8bit = XOR32rr %14.sub_32bit:gr64_with_sub_8bit(tied-def 0), %7:gr32, implicit-def dead $eflags\n}"];
	Node0x7fc0cd0225b0 -> Node0x7fc0cd0224a0;
	Node0x7fc0cd0225b0 -> Node0x7fc0cd0224a0[color=blue,style=dashed];
	Node0x7fc0cd0225b0 -> Node0x7fc0cd022170;
	Node0x7fc0cd0226c0 [shape=record,shape=Mrecord,label="{SU:12|%12.sub_32bit:gr64_nosp = ADD32rm %12.sub_32bit:gr64_nosp(tied-def 0), %0:gr64, 1, $noreg, 0, $noreg, implicit-def dead $eflags :: (load (s32) from %ir.0, !tbaa !4)\n}"];
	Node0x7fc0cd0226c0 -> Node0x7fc0cd021c20;
	Node0x7fc0cd0226c0 -> Node0x7fc0cd021c20[color=blue,style=dashed];
	Node0x7fc0cd0226c0 -> Node0x7fc0cd021a00;
	Node0x7fc0cd0227d0 [shape=record,shape=Mrecord,label="{SU:13|%18:gr32 = LEA64_32r %14:gr64_with_sub_8bit, 1, %12:gr64_nosp, -680876936, $noreg\n}"];
	Node0x7fc0cd0227d0 -> Node0x7fc0cd0225b0;
	Node0x7fc0cd0227d0 -> Node0x7fc0cd0226c0;
	Node0x7fc0cd0228e0 [shape=record,shape=Mrecord,label="{SU:14|%18:gr32 = ROL32ri %18:gr32(tied-def 0), 7, implicit-def dead $eflags\n}"];
	Node0x7fc0cd0228e0 -> Node0x7fc0cd0227d0;
	Node0x7fc0cd0228e0 -> Node0x7fc0cd0227d0[color=blue,style=dashed];
	Node0x7fc0cd0229f0 [shape=record,shape=Mrecord,label="{SU:15|%18:gr32 = ADD32rr %18:gr32(tied-def 0), %4:gr32, implicit-def dead $eflags\n}"];
	Node0x7fc0cd0229f0 -> Node0x7fc0cd0228e0;
	Node0x7fc0cd0229f0 -> Node0x7fc0cd0228e0[color=blue,style=dashed];
	Node0x7fc0cd0229f0 -> Node0x7fc0cd021e40;
	Node0x7fc0cd022b00 [shape=record,shape=Mrecord,label="{SU:16|MOV32mr %1:gr64, 1, $noreg, 0, $noreg, %18:gr32 :: (store (s32) into @ga, !tbaa !4)\n}"];
	Node0x7fc0cd022b00 -> Node0x7fc0cd0229f0;
	Node0x7fc0cd022b00 -> Node0x7fc0cd0226c0[color=blue,style=dashed];
	Node0x7fc0cd022b00 -> Node0x7fc0cd021c20[color=blue,style=dashed];
	Node0x7fc0cd022b00 -> Node0x7fc0cd021b10;
}
